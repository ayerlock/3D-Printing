[display_glyph chamber]
data:
	0000000000000000
	1111111111111111
	1000010000100001
	1000010000100001
	1000011111100001
	1000000000000001
	1000000000000001
	1000001111000001
	1011101001011101
	1000001111000001
	1000000110000001
	1000000000000001
	1011111111111101
	1000100000010001
	1111111111111111
	0000000000000000

[display_glyph thermometer]
data:
	0000000000000000
	0000000000000000
	0000000000111000
	0000000001000100
	0000000010010100
	0000000100100100
	0000001001001000
	0000010010010000
	0001100100100000
	0010001001000000
	0100100010000000
	0101110100000000
	0100100100000000
	0010001000000000
	0001110000000000
	0000000000000000

[display_glyph voron]
data:
	0000001110000000
	0000111111100000
	0001111111110000
	0111111111111100
	1111100111001110
	1111001110011110
	1110011100111110
	1100111001111110
	1111110011100110
	1111100111001110
	1111001110011110
	1110011100111110
	0111111111111100
	0001111111110000
	0000111111100000
	0000001110000000

[display_glyph mainsail]
data:
	0000000000000000
	0000000000000000
	0000000000000000
	0000000000000000
	0000000011000000
	0000000111000000
	0000000110000000
	0000001110000000
	0000011100000000
	0000011000110000
	0000111000110000
	0001110001110000
	0001100011100000
	0011100011000110
	0111000111000110
	0110001110001110

[display_template _vheater_temperature]
param_heater_name: "extruder"
text:
	{% if param_heater_name in printer %}
		{% set heater = printer[param_heater_name] %}
		# Show glyph
		{% if param_heater_name == "heater_bed" %}
			{% if heater.target %}
				{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
				~bed_heat{frame}~
			{% else %}
				~bed~
			{% endif %}
		{% else %}
			~extruder~
		{% endif %}
		# Show temperature
		{ "%3.0f" % (heater.temperature,) }
		# Optionally show target
		{% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
			~right_arrow~
			{ "%0.0f" % (heater.target,) }
		{% endif %}
		~degrees~{ "C" }
	{% endif %}

[display_data __voron_display extruder]
position: 0, 0
text: { render("_vheater_temperature", param_heater_name="extruder") }

[display_data __voron_display fan]
position: 0, 10
text:
	{% if 'fan' in printer %}
		{% set speed = printer.fan.speed %}
		{% if speed %}
			{% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
			~fan{frame}~
		{% else %}
			~fan1~
		{% endif %}
		{ "{:>4.0%}".format(speed) }
	{% endif %}

[display_data __voron_display bed]
position: 1, 0
text: { render("_vheater_temperature", param_heater_name="heater_bed") }

[display_data __voron_display progress_text]
position: 1, 10
text:
	{% set progress = printer.display_status.progress %}
	{ "{:^6.0%}".format(progress) }
	
[display_data __voron_display progress_text2]
position: 1, 10
text:
	{% set progress = printer.display_status.progress %}
	{ draw_progress_bar(1, 10, 6, progress) }

[display_data __voron_display printing_time]
position: 2, 10
text:
	{% set ptime = printer.idle_timeout.printing_time %}
	{ "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

# This section defines the actual chamber temp. field
[display_data __voron_display chamber]
position: 2, 0
text:
	{% set chamber = printer['temperature_fan chamber'] %}
	~chamber~
	{ "%3.0f" % (chamber.temperature,) }
	~degrees~{ "C" }

[display_data __voron_display print_status]
position: 3, 0
text: 
	{% if printer.display_status.message %}
		{ printer.display_status.message }
	{% else %}
		~voron~{ " V2.507 " }
	{% endif %}
